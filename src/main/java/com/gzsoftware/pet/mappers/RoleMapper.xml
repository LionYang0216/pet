<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzsoftware.pet.dao.RoleDao">
 <cache type="com.gzsoftware.pet.entity.vo.RedisCache" />
	<resultMap type="com.gzsoftware.pet.entity.po.Role" id="RoleResultMap">
	     <result column="ID" jdbcType="INTEGER" property="id" />
          <collection property="nodeList" column="id"  ofType="Node" javaType="list" fetchType="lazy"
            select="com.gzsoftware.pet.dao.NodeDao.getNodeListByRoleId" />  
	</resultMap>
	
<select id="getRoleListByAdminId" parameterType="java.lang.Integer"  resultType="Role" resultMap="RoleResultMap">
	select role.*  from admin join admin_role on admin.id = admin_role.ADMIN_ID
       INNER JOIN role on role.ID = admin_role.ROLE_ID where admin.id = #{id}
	</select>
	
	<select id="getRoleList" parameterType="com.gzsoftware.pet.entity.vo.DataTablesRequest"
		resultType="Role" resultMap="RoleResultMap" >
		select * from Role where 1=1
		<if test="condition!=null">
			<if test="condition.roleName!='' and condition.roleName!=null">
				and NAME like CONCAT('%',#{condition.roleName,
				jdbcType=VARCHAR},'%')
			</if>
		</if>
		<if test="orderBySql!=null and orderBySql!=''">
			order by ${orderBySql}
		</if>
		limit ${start},${length}
	</select>

	<select id="countAll" parameterType="com.gzsoftware.pet.entity.vo.DataTablesRequest"
		resultType="Integer">
		select count(*) from Role where 1=1
		<if test="condition!=null">
			<if test="condition.roleName!='' and condition.roleName!=null">
				and NAME like CONCAT('%',#{condition.roleName,
				jdbcType=VARCHAR},'%')
			</if>
		</if>
	</select>

	<select id="getRole" parameterType="java.lang.Integer" resultType="Role"  resultMap="RoleResultMap" >
		select * from Role where ID = #{id}
	</select>

    <select id="getRoleForSelect"  resultType="Role"  resultMap="RoleResultMap">
		select * from Role where 1 = 1
	</select>

	<insert id="addRole" parameterType="Role" useGeneratedKeys="true" keyProperty="id">
		insert into Role(NAME,DESCRIPTION) values(#{name}, #{description})
	</insert>


	<update id="updateRole" parameterType="Role">
		UPDATE Role SET NAME=#{name},DESCRIPTION = #{description} WHERE ID = #{id}
	</update>

	<delete id="deleteRole" parameterType="java.lang.Integer">
		delete from Role where ID = #{id}
	</delete>
	
</mapper> 